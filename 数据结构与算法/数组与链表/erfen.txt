二分法是一种查找有序序列元素的最高效的搜索算法，其条件必须是数组是按照大小顺序排列的，其逻辑思想是
确定搜索区间，通过比较当前区间与目标值比较，确定目标值的大体方向位置（是靠近左区间还是右区间），然后缩小对应区间，不断地与区间中间值比较并缩小区间，直到找到目标元素返回这个数组索引，找不到返回-1
代码实现：省略了部分代码，只出核心内容，注意这个数组的元素必须是有顺序的
auto left = 0;
auto right = num.size() - 1;
while (left <= right){
	auto mid = (left + right) / 2;
	if(num[mid] == tar){
	return mid;
	}
	else if(num[mid] > tar){
	right = mid - 1;
	}
	else {
	left = mid + 1;
	}
}
return -1;
这种方法比传统的直接遍历寻找还要快，特别是数据量特别大的时候，这个方法时间效率上很高

--------------------------
参考文档:代码随想录
